name: Build Feature Branch

on:
  push:
    branches-ignore:
    - master

jobs:

  build:
    name: Build, Test and Package
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Checkout
      uses: actions/checkout@v1
    - name: Unit tests
      run: mvn test
    - name: Package
      run: mvn package war:war -Dmaven.test.skip=true
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag docker.pkg.github.com/$GITHUB_REPOSITORY/bookstore:$GITHUB_SHA
    - name: Publish to GitHub Package Registry
      env:
        DOCKER_TOKEN: ${{secrets.GPR_TOKEN}}
        DOCKER_USER: <token>
      run: |
        docker login docker.pkg.github.com -u $DOCKER_USER -p $DOCKER_TOKEN
        docker push docker.pkg.github.com/$GITHUB_REPOSITORY/bookstore:$GITHUB_SHA

    - name: Create the review app
      env:
        RESOURCE_GROUP: bookstore
        APP_SERVICE_PLAN: bookstore-app-service-plan
        WEBAPP_NAME_PREFIX: bookstore-review
        DOCKER_USERNAME: <token>
        DOCKER_PASSWORD: ${{secrets.GPR_TOKEN}}
        DOCKER_REGISTRY_URL: docker.pkg.github.com
      run: |
        az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --deployment-container-image-name docker.pkg.github.com/$GITHUB_REPOSITORY/bookstore:$GITHUB_SHA
        az webapp config container set --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --docker-registry-server-password $DOCKER_PASSWORD --docker-registry-server-user $DOCKER_USERNAME --docker-registry-server-url $DOCKER_REGISTRY_URL
        az webapp update -g $RESOURCE_GROUP -n $WEBAPP_NAME_PREFIX-$GITHUB_SHA --set tags.ref=$GITHUB_REF tags.type=review

    - name: Delete the review apps
      env:
        RESOURCE_GROUP: bookstore
        GITHUB_HEAD_REF: ${{ format('refs/heads/{0}', github.head_ref) }}
        run: |
          az webapp list --resource-group $RESOURCE_GROUP --query "[?tags.ref=='$GITHUB_HEAD_REF'&&tags.type=='review']" > webapp-list.json
          filesize=$(wc -c < webapp-list.json); if [ "$filesize" -eq 3 ]; then exit 0; else echo 'No webapp found'; fi
          WEBAPP_ID_LIST=$(jq -j '.[].id+" "' webapp-list.json) && az webapp delete --ids $WEBAPP_ID_LIST --keep-empty-plan
