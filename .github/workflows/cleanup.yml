name: Cleanup

on:
  pull_request:
    types: [closed]

jobs:

  clean:
    name: Cleanup Review apps
    runs-on: ubuntu-latest

    steps:
    - name: Checking out the code
      uses: actions/checkout@v1
    - name: Delete deployments
      env:
        GITHUB_HEAD_REF: ${{ github.head_ref }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./.github/scripts/delete-deployments.sh
    - name: Login to Azure
      uses: azure/actions/login@master
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_REVIEW }}
    - name: Create the review app
      env:
        RESOURCE_GROUP: bookstore
        APP_SERVICE_PLAN: bookstore-app-service-plan
        WEBAPP_NAME_PREFIX: bookstore-review
        DOCKER_USERNAME: <token>
        DOCKER_PASSWORD: ${{secrets.GPR_TOKEN}}
        DOCKER_REGISTRY_URL: docker.pkg.github.com
      run: |
        az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --deployment-container-image-name docker.pkg.github.com/$GITHUB_REPOSITORY/bookstore:$GITHUB_SHA
        az webapp config container set --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME_PREFIX-$GITHUB_SHA --docker-registry-server-password $DOCKER_PASSWORD --docker-registry-server-user $DOCKER_USERNAME --docker-registry-server-url $DOCKER_REGISTRY_URL
        az webapp update -g $RESOURCE_GROUP -n $WEBAPP_NAME_PREFIX-$GITHUB_SHA --set tags.ref=$GITHUB_REF tags.type=review

    - name: Delete the review apps
      env:
        RESOURCE_GROUP: bookstore
        GITHUB_HEAD_REF: $GITHUB_REF
      run: |
        az webapp list --resource-group $RESOURCE_GROUP --query "[?tags.ref=='$GITHUB_HEAD_REF'&&tags.type=='review']" > webapp-list.json
        filesize=$(wc -c < webapp-list.json); if [ "$filesize" -eq 3 ]; then exit 0; fi
        jq -j '.[].id+ " "' webapp-list.json
        WEBAPP_ID_LIST=$(jq -j '.[].id+" "' webapp-list.json) && az webapp delete --ids $WEBAPP_ID_LIST --keep-empty-plan
